% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulation_functions.R
\name{simulate_crispr_screen_data}
\alias{simulate_crispr_screen_data}
\title{Simulate CRISPR screen data}
\usage{
simulate_crispr_screen_data(
  covariate_matrices,
  covariate_effects_gRNA,
  covariate_effects_gene,
  zero_inflation,
  theta,
  n_enh,
  seed
)
}
\arguments{
\item{covariate_matrices}{a list of covariate matrices}

\item{covariate_effects_gRNA}{the effect of the technical covariates on gRNA presence probability (a vector of values, whose length corresponds to the number of covariates; must include an intercept term)}

\item{covariate_effects_gene}{the effect of the technical covariates on mean gene expression (a vector of values, whose length corresponds to the number of covariates; must include an intercept term)}

\item{zero_inflation}{zero inflation rate (between 0 and 1)}

\item{theta}{size of the negative binomial distribution for gene expression}

\item{seed}{(optonal) seed to the random number generator}

\item{n_enhancers}{number of enhancers to sample (conditionally on the covariates)}
}
\value{
list with components (i) cell_by_gene_expressions, (ii) cell_by_enhancer_perturbation_indicators, and (iii) Z
}
\description{
Simulate CRISPR screen data
}
\examples{
n_cells <- 1000
gasp_cov_mat <- read.fst("/Volumes/tims_new_drive/research/sceptre_files/data/gasperini/processed/cell_covariate_model_matrix.fst")
covariate_matrices <- replicate(n = 500, expr = {
 gasp_cov_mat \%>\% select(lg_total_umis, prep_batch) \%>\% mutate(prep_batch = factor(prep_batch, levels = c("prep_batch_1", "prep_batch_2"), labels = c("prep_batch_1", "prep_batch_2"))) \%>\% sample_n(n_cells)
}, simplify = FALSE)
mean_log_umis <- mean(gasp_cov_mat$lg_total_umis)
mean_batch <- mean(ifelse(gasp_cov_mat$prep_batch == "prep_batch_1", 0, 1))
covariate_effects_gRNA <- c(-7, 0.5, -2)
covariate_effects_gene <- c(-2.5, 0.5, -2)
mean_mu_gRNA <- (covariate_effects_gRNA[1] + covariate_effects_gRNA[2] * mean_log_umis + covariate_effects_gRNA[3] * mean_batch) \%>\% binomial()$linkinv()
mean_mu_gene <- (covariate_effects_gene[1] + covariate_effects_gene[2] * mean_log_umis + covariate_effects_gene[3] * mean_batch) \%>\% negative.binomial(1)$linkinv()
zero_inflation <- 0
theta <- 1
n_enh <- 5
seed <- 1234
sim_data <- simulate_crispr_screen_data(covariate_matrices, covariate_effects_gRNA, covariate_effects_gene, zero_inflation, theta, n_enh, seed)
}
