% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resampling_method_functions.R
\name{run_sceptre_using_precomp}
\alias{run_sceptre_using_precomp}
\title{Run sceptre using precomputations for gRNAs and genes.}
\usage{
run_sceptre_using_precomp(
  expressions,
  gRNA_indicators,
  gRNA_precomp,
  gene_precomp_size,
  gene_precomp_offsets,
  B,
  seed,
  reduced_output = TRUE
)
}
\arguments{
\item{expressions}{a vector of gene expressions (in UMI counts)}

\item{gRNA_indicators}{a vector of gRNA indicators}

\item{gRNA_precomp}{a vector of conditional probabilities for gRNA assignments}

\item{gene_precomp_size}{the pre-computed size}

\item{gene_precomp_offsets}{the pre-computed distillation offsets}

\item{B}{the number of resamples to make (default 500)}

\item{seed}{an arguement to set.seed; if null, no seed is set}
}
\value{
a p-value of the null hypothesis of no gRNA effect on gene expression
}
\description{
This function is the workhorse function of the sceptre package. It runs a distilled CRT using a negative binomial test statistic based on an expression vector, a gRNA indicator vector, an offset vector (from the distillation step), gRNA conditional probabilities, an estimate of the negative binomial size parameter, and the number of resampling replicates.
}
\details{
This currently is a one-tailed, left-sided test. Thus, it is suitable for up-regulatory elements like enhancers and promoters but not down-regulatory elements like silencers.
}
\examples{
offsite_dir <- "/Volumes/tims_new_drive/research/sceptre_files"
source("/Users/timbarry/Box/SCEPTRE/sceptre_paper/sceptre_paper/analysis_drivers/analysis_drivers_gasp/sceptre_function_args.R")
gene_id <- "ENSG00000008256"
gRNA_id <- "ACTB_TSS"
expressions <- cell_gene_expression_matrix[, which(ordered_gene_ids == gene_id)][cell_subset]
gRNA_indicators <- (read.fst(gRNA_indicator_matrix_fp, columns = gRNA_id) \%>\% pull() \%>\% as.integer())[cell_subset]
gene_sizes <- readRDS(paste0(gene_precomp_dir, "/size_reg_file.rds"))
gene_precomp_size <- gene_sizes[[gene_id]]
gRNA_precomp <- paste0(gRNA_precomp_dir, "/gRNA_dictionary.fst") \%>\% read.fst() \%>\% filter(id == gRNA_id) \%>\% pull(pod_id) \%>\% paste0(gRNA_precomp_dir, "/gRNA_precomp_", ., ".fst") \%>\% read.fst(columns = gRNA_id) \%>\% pull()
gene_precomp_offsets <- paste0(gene_precomp_dir, "/gene_dictionary.fst") \%>\% read.fst() \%>\% filter(id == gene_id) \%>\% pull(pod_id) \%>\% paste0(gene_precomp_dir, "/gene_offsets_", ., ".fst") \%>\% read.fst(columns = gene_id) \%>\% pull()
run_sceptre_using_precomp(expressions, gRNA_indicators, gRNA_precomp, gene_precomp_size, gene_precomp_offsets, 500, 1234)
}
