% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resampling_method_functions.R
\name{run_sceptre_gRNA_gene_pair}
\alias{run_sceptre_gRNA_gene_pair}
\title{Run sceptre on a gRNA-gene pair}
\usage{
run_sceptre_gRNA_gene_pair(
  expressions,
  gRNA_indicators,
  covariate_matrix,
  gene_precomp_size = NULL,
  B = 500,
  seed = NULL
)
}
\arguments{
\item{expressions}{a vector a gene expressions}

\item{gRNA_indicators}{a vector of gRNA inicators}

\item{covariate_matrix}{the matrix of cell-specific covariates (e.g., library size, batch effect, cell cycle, etc.)}

\item{gene_precomp_size}{(optional) the pre-computed size of the gene NB distribution}

\item{B}{number of resamples (default 500)}

\item{seed}{(optional) seed to the random number generator}
}
\value{
a p-value of the null hypothesis of no gRNA effect on gene expression
}
\description{
This function runs the sceptre algorithm on a single gRNA-gene pair. It requires as arguments the gene expression vector, the gRNA indicator vector, and the covariate matrix. Users optionally can pass the gRNA precomputation or gene precomputation as arguments.
}
\examples{
# An example in which the alternative is true.
sim_dat <- simulate_crispr_screen_data(num_cells = 1000,
grna_mean_prob = 0.2,
covariate_sampler = list(cell_size = rnorm, cell_cycle = runif),
mRNA_mean_expression = 40,
gRNA_effect = -4,
covariate_effects = c(0.5, 1),
zero_inflation = 0,
neg_binom_size = 2)
expressions <- sim_dat$Y
gRNA_indicators <- sim_dat$X
covariate_matrix <-sim_dat$covariate_df
run_sceptre_gRNA_gene_pair(expressions = expressions,
gRNA_indicators = gRNA_indicators,
covariate_matrix = covariate_matrix)

# An example in which the null is true.
sim_dat <- simulate_crispr_screen_data(num_cells = 1000,
grna_mean_prob = 0.2,
covariate_sampler = list(cell_size = rnorm, cell_cycle = runif),
mRNA_mean_expression = 40,
gRNA_effect = 0,
covariate_effects = c(0.5, 1),
zero_inflation = 0,
neg_binom_size = 2)
expressions <- sim_dat$Y
gRNA_indicators <- sim_dat$X
covariate_matrix <-sim_dat$covariate_df
run_sceptre_gRNA_gene_pair(expressions = expressions,
gRNA_indicators = gRNA_indicators,
covariate_matrix = covariate_matrix)
}
