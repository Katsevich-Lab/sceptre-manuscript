covariate_matrix = covariate_matrix)
library(sceptre)
source("/Users/timbarry/Box/SCEPTRE/sceptre_paper/analysis_drivers_xie/sceptre_function_args.R")
offsite_dir <- "/Volumes/tims_new_drive/research/sceptre_files"
source("/Users/timbarry/Box/SCEPTRE/sceptre_paper/analysis_drivers_xie/sceptre_function_args.R")
expressions <- cell_gene_expression_matrix[,1]
length(expressions)
expressions <- cell_gene_expression_matrix[,1][cell_subset]
length(expressions)
gRNA_indicators <- read.fst(gRNA_indicator_matrix_fp, columns = 1)
bulk_regions
read.fst(gRNA_indicator_matrix_fp, columns = "chr5:54325645-54326045")[cell_subset]
read.fst(gRNA_indicator_matrix_fp, columns = "chr5:54325645-54326045")
read.fst(gRNA_indicator_matrix_fp, columns = "chr5:54325645-54326045") %>% pull() %>% as.integer() %>% slice(cell_subset)
(read.fst(gRNA_indicator_matrix_fp, columns = "chr5:54325645-54326045") %>% pull() %>% as.integer())[cell_subset]
covariate_matrix
nrow(covariate_matrix)
covariate_matrix <- if (nrow(covariate_matrix) == 106664) covariate_matrix else covariate_matrix[cell_subset,]
covariate_matrix <- if (nrow(covariate_matrix) == 106664) covariate_matrix else covariate_matrix[cell_subset,]
nrow(covariate_matrix)
nrow(covariate_matrix)
covariate_matrix <- if (nrow(covariate_matrix) == 106664) covariate_matrix else covariate_matrix[cell_subset,]
nrow(covariate_matrix)
length(expressions)
run_sceptre_gRNA_gene_pair(expressions, gRNA_indicators, covariate_matrix)
?run_sceptre_gRNA_gene_pair
library(sceptre)
?run_sceptre_gRNA_gene_pair
library(sceptre)
?run_sceptre_gRNA_gene_pair
offsite_dir <- "/Volumes/tims_new_drive/research/sceptre_files"
source("/Users/timbarry/Box/SCEPTRE/sceptre_paper/analysis_drivers_xie/sceptre_function_args.R")
expressions <- cell_gene_expression_matrix[,1][cell_subset]
gRNA_indicators <- (read.fst(gRNA_indicator_matrix_fp, columns = "chr5:54325645-54326045") %>% pull() %>% as.integer())[cell_subset]
covariate_matrix <- if (nrow(covariate_matrix) == 106664) covariate_matrix else covariate_matrix[cell_subset,]
run_sceptre_gRNA_gene_pair(expressions, gRNA_indicators, covariate_matrix)
warnings()
cell_subset
length(cell_subset)
cell_gene_expression_matrix[,1] %>% length
source("/Users/timbarry/Box/SCEPTRE/sceptre_paper/analysis_drivers_xie/sceptre_function_args.R")
offsite_dir <- "/Volumes/tims_new_drive/research/sceptre_files"
source("/Users/timbarry/Box/SCEPTRE/sceptre_paper/analysis_drivers_xie/sceptre_function_args.R")
expressions <- cell_gene_expression_matrix[,2][cell_subset]
gRNA_indicators <- (read.fst(gRNA_indicator_matrix_fp, columns = "chr5:54325645-54326045") %>% pull() %>% as.integer())[cell_subset]
length(gRNA_indicators)
covariate_matrix <- if (nrow(covariate_matrix) == 106666) covariate_matrix else covariate_matrix[cell_subset,]
run_sceptre_gRNA_gene_pair(expressions, gRNA_indicators, covariate_matrix)
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
require(katsevich2020)
require(scales)
source(paste0(code_dir, "/analysis_drivers_xie/paths_to_dirs.R"))
source(paste0(code_dir, "/sup_analyses/xie_sup_analyses/aux_objects.R"))
p_vals_sceptre <- paste0(results_dir, "/all_results.fst") %>% read.fst() %>% filter(enh_names == "ARL15-enh")
p_vals_nb <- paste0(results_dir_negative_binomial, "/all_results.fst") %>% read.fst() %>% filter(gRNA_id == as.character(p_vals_sceptre$gRNA_id[1]))
p_vals_hypergeo <- paste0(processed_dir, "/hypergeometric_arl15enh_pvals_down.rds") %>% readRDS()
paste0(processed_dir, "/xie_p_values.rds") %>% readRDS()
p_vals_hypergeo <- paste0(processed_dir, "/xie_p_values.rds") %>% readRDS() %>% pluck("ARL15_enh")
head(p_vals_hypergeo)
x <- paste0(processed_dir, "/xie_p_values.rds") %>% readRDS()
p_vals_hypergeo <- paste0(processed_dir, "/xie_p_values.rds") %>% readRDS() %>% pluck("arl15_enh")
p_vals_hypergeo
p_vals_hypergeo <- p_vals_hypergeo[names(p_vals_hypergeo) %in% p_vals_sceptre$gene_id]
to_plot <- tibble(method = rep(x = c("SCEPTRE", "NB regression", "Hypergeometric"), each = length(p_vals_hypergeo)) %>% factor(), p_value = c(p_vals_sceptre$p_value, p_vals_nb$p_value, set_names(p_vals_hypergeo, NULL) ), gene = c(as.character(p_vals_sceptre$gene_id), as.character(p_vals_nb$gene_id), names(p_vals_hypergeo)))
ci <- 0.95
truncate_thresh <- 1e-9
qq_data <- to_plot %>%
rename(pvalue = p_value) %>%
group_by(method) %>%
mutate(r = rank(pvalue), expected = ppoints(n())[r],
clower = qbeta(p=(1-ci)/2, shape1 = r, shape2 = n()+1-r),
cupper = qbeta(p=(1+ci)/2, shape1 = r, shape2 = n()+1-r)) %>% ungroup()
min_expected_p <- min(qq_data$expected)
sorted_methods_rightmost_pnt <- filter(qq_data, expected == min_expected_p) %>% arrange(pvalue) %>% pull(method) %>% as.character()
qq_data <- mutate(qq_data, pvalue = ifelse(pvalue <= truncate_thresh, truncate_thresh, pvalue))
for (i in 1:length(sorted_methods_rightmost_pnt)) {
curr_method <- sorted_methods_rightmost_pnt[i]
shift <- (i - 1) * 1e-9 * 3/4
curr_p <- qq_data[qq_data$method == curr_method & qq_data$expected == min_expected_p, "pvalue"] %>% pull()
qq_data[qq_data$method == curr_method & qq_data$expected == min_expected_p, "pvalue"] <- curr_p + shift
}
annotation_df <- filter(qq_data, gene == filter(p_vals_sceptre, gene_names == "ARL15") %>% pull(gene_id) %>% as.character())
arrow_coords <- tibble(x1 = 4e-4, x2 = annotation_df$expected + 1e-5, y1 = 1e-8, y2 = annotation_df$pvalue)
p <- qq_data %>%
ggplot(aes(x = expected, y = pvalue, group = method, ymin = clower, ymax = cupper)) +
geom_point(aes(color = method), size = 1, alpha = 0.5) +
geom_ribbon(alpha = 0.2) +
geom_abline(intercept = 0, slope = 1) +
scale_colour_manual(values = setNames(plot_colors[c("hypergeometric", "improved_nb", "sceptre")], NULL), name = "Method") +
xlab("Expected null p-value") +
ylab("Observed p-value") +
guides(color = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(trans = revlog_trans(base = 10)) +
scale_y_continuous(trans = revlog_trans(base = 10)) +
theme_bw() + theme(legend.position = c(0.25,0.8), text = element_text(size = 12),
legend.background = element_rect(fill = "transparent", colour = NA),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.line = element_line()) +
annotate(geom = "text", x = 10e-4, y = 1e-8, label = "ARL15", col = "firebrick3") +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2), lwd = 0.2, data = arrow_coords, arrow = arrow(length=unit(0.2,"cm")), inherit.aes = FALSE, col = "grey40")
p
# Bulk RNA-seq
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
code_dir
source(paste0(code_dir, "/analysis_drivers_xie/paths_to_dirs.R"))
source(paste0(code_dir, "/sup_analyses/xie_sup_analyses/aux_objects.R"))
library(edgeR)
gene_ids_in_use <- paste0(processed_dir, "/gRNA_gene_pairs.fst") %>% read.fst() %>% pull(gene_id) %>% as.character() %>% unique()
head(gene_ids_in_use)
all_gene_names <- paste0(processed_dir, "/ordered_genes.RDS") %>% readRDS()
all_gene_ids <- paste0(processed_dir, "/ordered_gene_ids.RDS") %>% readRDS()
gene_names_in_use <- all_gene_names[all_gene_ids %in% gene_ids_in_use]
bulk_data <- paste0(processed_dir, "/bulk_RNAseq.fst") %>% read.fst() %>% select(-Chr, -Start, -End, -Strand, -Length) %>% filter(Geneid %in% gene_names_in_use)
paste0(processed_dir, "/bulk_RNAseq.rds") %>% readRDS()
?pluck
x <- paste0(processed_dir, "/bulk_RNAseq.rds") %>% readRDS()
paste0(processed_dir, "/bulk_RNAseq.rds") %>% readRDS() %>% pluck(data, arl15_enh)
paste0(processed_dir, "/bulk_RNAseq.rds") %>% readRDS() %>% pluck("data", "arl15_enh")
bulk_data <- paste0(processed_dir, "/bulk_RNAseq.rds") %>% readRDS() %>% pluck("data", "arl15_enh") %>% select(-Chr, -Start, -End, -Strand, -Length) %>% filter(Geneid %in% gene_names_in_use)
bulk_info <- paste0(processed_dir, "/bulk_RNAseq_info.fst") %>% read.fst()
bulk_info <- paste0(processed_dir, "/bulk_RNAseq.rds") %>% readRDS() %>% pluck("info", "arl15_enh")
head
head(bulk_info)
group <- factor(bulk_info$region)
y <- DGEList(counts = select(bulk_data, -Geneid) %>% as.matrix, group = group)
y <- calcNormFactors(y)
design <- model.matrix(~group)
y <- estimateDisp(y, design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef = 2)
genes_ordered <- topTags(qlf, n = nrow(bulk_data))
p_vals <- data.frame(gene_id = bulk_data$Geneid[row.names(genes_ordered) %>% as.integer()], p_value = genes_ordered$table$PValue, p_value_adj = genes_ordered$table$FDR)
p_Vals
p_vals
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
library(katsevich2020)
library(scales)
source(paste0(code_dir, "/analysis_drivers_xie/paths_to_dirs.R"))
source(paste0(code_dir, "/sup_analyses/xie_sup_analyses/aux_objects.R"))
p_vals_sceptre <- paste0(results_dir, "/all_results.fst") %>% read.fst() %>% as_tibble() %>% filter(enh_names == "ARL15-enh") %>% select(p_value, gene_names) %>% mutate(p_value_adj = p.adjust(p_value, method = "BH"))
p_vals_bulk <- paste0(offsite_dir, "/results/xie/bulk_rna_seq/pvals_arl15_enh.rds") %>% readRDS() %>% as_tibble() %>% rename(gene_names = gene_id)
to_plot <- inner_join(p_vals_bulk, p_vals_sceptre, by = "gene_names") %>% rename(bulk_pval_adj = p_value_adj.x, bulk_pval = p_value.x, sceptre_pval_adj = p_value_adj.y, sceptre_pval = p_value.y) %>% mutate(is_arl15 = (gene_names == "ARL15"))
p <- ggplot(data = to_plot, mapping = aes(x = bulk_pval, y = sceptre_pval, col = is_arl15)) +
geom_point(alpha = 0.5) +
scale_colour_manual(values = c("grey60", "firebrick3")) +
scale_x_continuous(trans = revlog_trans(base = 10)) +
scale_y_continuous(trans = revlog_trans(base = 10)) +
theme_bw() + theme(text = element_text(size = 12),
legend.background = element_rect(fill = "transparent", color = NA),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.line = element_line(), legend.position = "none") +
xlab("Bulk RNA-seq p-value") + ylab("SCEPTRE p-value") +
geom_point(mapping = aes(x = bulk_pval, y = sceptre_pval), data = filter(to_plot, is_arl15), size = 2) +
annotate(geom = "text", x = 1e-12, y = 1e-12, label = "ARL15", col = "firebrick3")
p
37 / 10000
(50/10000)
(50/10000) * 100
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
require(katsevich2020)
source(paste0(code_dir, "/analysis_drivers_gasperini/paths_to_dirs.R"))
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
require(katsevich2020)
source(paste0(code_dir, "/analysis_drivers_gasp/paths_to_dirs.R"))
code_dir
source(paste0(code_dir, "/analysis_drivers_gasp/paths_to_dirs.R"))
paste0(code_dir, "/analysis_drivers_gasp/paths_to_dirs.R")
source(paste0(code_dir, "analysis_drivers_gasp/paths_to_dirs.R"))
paste0(code_dir, "analysis_drivers_gasp/paths_to_dirs.R")
source(paste0(code_dir, "analysis_drivers_gasp/file_paths_to_dirs.R"))
# Load the result data frame
paste0(results_dir, "all_results.fst")
# Load the result data frame
paste0(results_dir, "/all_results.fst")
# Load the result data frame
sceptre_res <- paste0(results_dir, "/all_results.fst") %>% read.fst()
head(sceptre_res)
nrow(sceptre_res)
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
source(paste0(code_dir, "/analysis_drivers_gasp/file_paths_to_dirs.R"))
# 4. Extract the target_site-gRNA pairs to analyze.
all_deg_results <- suppressWarnings(read_tsv(paste0(raw_data_dir, "/GSE120861_all_deg_results.at_scale.txt"), col_types = "cddddddccccciiciiccl"))
head(all_deg_results)
colnames(all_deg_results)
head(all_deg_results)
all_deg_results$site_type %>% head
all_deg_results$site_type %>% table
nrow(all_deg_results)
gasperini
head(all_deg_results)
colnames(all_deg_results)
gasperini_results <- select(all_deg_results, -pairs4merge, -beta, -intercept, -fold_change.transcript_remaining, -pvalue.raw)
head(gasperini_results)
gasperini_results$quality_rank_grna %>% table
# 4. Extract the target_site-gRNA pairs to analyze.
all_deg_results <- suppressWarnings(read_tsv(paste0(raw_data_dir, "/GSE120861_all_deg_results.at_scale.txt"), col_types = "cddddddccccciiciiccl"))
processed_dir
write.fst(gasperini_results, paste0(processed_dir, "/gasperini_pvals.fst"))
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
require(katsevich2020)
source(paste0(code_dir, "analysis_drivers_gasp/file_paths_to_dirs.R"))
gasperini_res <-  paste0(processed_dir, "/gasperini_pvals.fst") %>% read.fst()
head(gasperini_res)
nrow(gasperini_res)
# Load the result data frame
sceptre_res <- paste0(results_dir, "/all_results.fst") %>% read.fst()
nrow(sceptre_res)
# Load the result data frame
sceptre_res <- paste0(results_dir, "/all_results.fst") %>% read.fst()
original_results_raw <- suppressWarnings(read_tsv(sprintf("%s/data/raw/CRISPR/GSE120861_all_deg_results.at_scale.txt", base_dir), col_types = "cddddddccccciiciiccc"))
original_results_raw <- suppressWarnings(read_tsv(paste0(rraw_data_dir, "/GSE120861_gene_gRNAgroup_pair_table.at_scale.txt"), col_types = "cddddddccccciiciiccc"))
original_results_raw <- suppressWarnings(read_tsv(paste0(raw_data_dir, "/GSE120861_gene_gRNAgroup_pair_table.at_scale.txt"), col_types = "cddddddccccciiciiccc"))
head(original_results_raw)
nrow(original_results_raw)
read_excel
?read_excel
require(readxl)
require(readxl)
require(katsevich2020)
old_pairs <- read_excel(path = paste0(rraw_data_dir, "/Gasperini_TableS2.xlsx"), sheet = 3)
old_pairs <- read_excel(path = paste0(raw_data_dir, "/Gasperini_TableS2.xlsx"), sheet = 3)
head(old_pairs)
get_target_site <- function(grna_group) {
if(!grepl("_two", grna_group)){
target_site = grna_group
} else{
target_site = strsplit(grna_group, "_")[[1]][1]
}
}
head(original_results_raw)
original_results <- original_results_raw %>%
group_by(gRNA_group) %>%
mutate(target_site = get_target_site(unique(gRNA_group))) %>%
ungroup() %>%
left_join(old_pairs %>%
select(Target_Site, ENSG, high_confidence_subset) %>%
mutate(quality_rank_grna = "top_two") %>%
rename(target_site = Target_Site),
by = c("target_site", "ENSG", "quality_rank_grna")) %>%
rename(grna_group = gRNA_group, gene_id = ENSG, pair_id = pairs4merge, chr = target_gene.chr) %>%
mutate(TSS = ifelse(strand == "+", target_gene.start, target_gene.stop),
rejected = ifelse(is.na(high_confidence_subset), FALSE, high_confidence_subset)) %>%
select(chr, pair_id, rejected,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
beta, intercept, fold_change.transcript_remaining, pvalue.raw, pvalue.empirical, pvalue.empirical.adjusted)
get_target_site <- function(grna_group) {
if(!grepl("_two", grna_group)){
target_site = grna_group
} else{
target_site = strsplit(grna_group, "_")[[1]][1]
}
}
head(original_results_raw)
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
require(readxl)
require(katsevich2020)
source(paste0(code_dir, "analysis_drivers_gasp/file_paths_to_dirs.R"))
# Load the result data frame
sceptre_res <- paste0(results_dir, "/all_results.fst") %>% read.fst()
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
require(readxl)
require(katsevich2020)
source(paste0(code_dir, "analysis_drivers_gasp/file_paths_to_dirs.R"))
# Load the Gasperini results
original_results_raw <- suppressWarnings(read_tsv(paste0(raw_data_dir, "/GSE120861_all_deg_results.at_scale.txt"), col_types = "cddddddccccciiciiccc"))
original_results_raw <- suppressWarnings(read_tsv(paste0(raw_data_dir, "/GSE120861_all_deg_results.at_scale.txt"), col_types = "cddddddccccciiciiccc"))
old_pairs <- read_excel(path = paste0(raw_data_dir, "/Gasperini_TableS2.xlsx"), sheet = 3)
head(old_pairs)
get_target_site <- function(grna_group) {
if(!grepl("_two", grna_group)){
target_site = grna_group
} else{
target_site = strsplit(grna_group, "_")[[1]][1]
}
}
original_results <- original_results_raw %>%
group_by(gRNA_group) %>%
mutate(target_site = get_target_site(unique(gRNA_group))) %>%
ungroup() %>%
left_join(old_pairs %>%
select(Target_Site, ENSG, high_confidence_subset) %>%
mutate(quality_rank_grna = "top_two") %>%
rename(target_site = Target_Site),
by = c("target_site", "ENSG", "quality_rank_grna")) %>%
rename(grna_group = gRNA_group, gene_id = ENSG, pair_id = pairs4merge, chr = target_gene.chr) %>%
mutate(TSS = ifelse(strand == "+", target_gene.start, target_gene.stop),
rejected = ifelse(is.na(high_confidence_subset), FALSE, high_confidence_subset)) %>%
select(chr, pair_id, rejected,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
beta, intercept, fold_change.transcript_remaining, pvalue.raw, pvalue.empirical, pvalue.empirical.adjusted)
head(original_results)
head(original_results)
# fill in missing empirical p-values
null_ecdf = ecdf(c(0,original_results %>% filter(site_type == "NTC") %>% pull(pvalue.raw)))
original_results = original_results %>%
mutate(pvalue.empirical = ifelse(is.na(pvalue.empirical), null_ecdf(pvalue.raw), pvalue.empirical))
head(original_results)
head(null_ecdf)
# fill in missing empirical p-values
null_ecdf <- ecdf(c(0,original_results %>% filter(site_type == "NTC") %>% pull(pvalue.raw)))
original_results <- original_results %>%
mutate(pvalue.empirical = ifelse(is.na(pvalue.empirical), null_ecdf(pvalue.raw), pvalue.empirical))
head(original_results)
processed_dir
# write to file
write.fst(original_results, paste0(processed_dir, "/original_results.fst"))
head(original_results)
nrow(original_results)
rm(original_results_raw)
original_results$quality_rank_grna %>% table()
paste0(results_dir, "/all_results.fst") %>% read.fst() %>% head()
# Manipulate the SCEPTRE results
sceptre_res <- paste0(results_dir, "/all_results.fst") %>% read.fst() %>% head()
# Manipulate the SCEPTRE results
sceptre_res <- paste0(results_dir, "/all_results.fst") %>% read.fst()
colnames(sceptre_res)
sceptre_res %>% rename(gRNA_group = gRNA_id)
sceptre_res %>% rename(gRNA_group = gRNA_id) %>% left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group"))
sceptre_res %>% rename(gRNA_group = gRNA_id) %>% head
sceptre_res %>% rename(grna_group = gRNA_id) %>% head
sceptre_res %>% rename(grna_group = gRNA_id) %>% left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>% head
head(v)
head(sceptre_res)
sceptre_res %>% rename(grna_group = gRNA_id) %>% left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
group_by(site_type, quality_rank_grna) %>%
mutate(adjusted_pvalue = ifelse(site_type == "DHS" & quality_rank_grna == "top_two",
p.adjust(p_value, "fdr"), NA),
rejected = ifelse(is.na(adjusted_pvalue), FALSE, adjusted_pvalue <= 0.1)) %>%
ungroup()
sceptre_res %>% rename(grna_group = gRNA_id) %>% left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
group_by(site_type, quality_rank_grna) %>%
mutate(adjusted_pvalue = ifelse(site_type == "DHS" & quality_rank_grna == "top_two",
p.adjust(p_value, "fdr"), NA),
rejected = ifelse(is.na(adjusted_pvalue), FALSE, adjusted_pvalue <= 0.1)) %>%
ungroup() %>%
select(chr, pair_id, rejected,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
method, original_zvalue, corrected_pvalue_raw, corrected_pvalue_st, xi, omega, alpha, nu)
sceptre_res %>% rename(grna_group = gRNA_id) %>% left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
group_by(site_type, quality_rank_grna) %>%
mutate(adjusted_pvalue = ifelse(site_type == "DHS" & quality_rank_grna == "top_two",
p.adjust(p_value, "fdr"), NA),
rejected = ifelse(is.na(adjusted_pvalue), FALSE, adjusted_pvalue <= 0.1)) %>%
ungroup() %>%
select(chr, pair_id, rejected,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
original_zvalue, corrected_pvalue_raw, corrected_pvalue_st, xi, omega, alpha, nu)
sceptre_res %>% rename(grna_group = gRNA_id) %>% left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
group_by(site_type, quality_rank_grna) %>%
mutate(adjusted_pvalue = ifelse(site_type == "DHS" & quality_rank_grna == "top_two",
p.adjust(p_value, "fdr"), NA),
rejected = ifelse(is.na(adjusted_pvalue), FALSE, adjusted_pvalue <= 0.1)) %>%
ungroup() %>%
select(chr, pair_id, rejected,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
corrected_pvalue_raw, corrected_pvalue_st, xi, omega, alpha, nu)
sceptre_res %>% rename(grna_group = gRNA_id) %>% left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
group_by(site_type, quality_rank_grna) %>%
mutate(adjusted_pvalue = ifelse(site_type == "DHS" & quality_rank_grna == "top_two",
p.adjust(p_value, "fdr"), NA),
rejected = ifelse(is.na(adjusted_pvalue), FALSE, adjusted_pvalue <= 0.1)) %>%
ungroup() %>%
select(chr, pair_id, rejected,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
p_value, xi, omega, alpha, nu)
resampling_results <- sceptre_res %>% rename(grna_group = gRNA_id) %>% left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
group_by(site_type, quality_rank_grna) %>%
mutate(adjusted_pvalue = ifelse(site_type == "DHS" & quality_rank_grna == "top_two",
p.adjust(p_value, "fdr"), NA),
rejected = ifelse(is.na(adjusted_pvalue), FALSE, adjusted_pvalue <= 0.1)) %>%
ungroup() %>%
select(chr, pair_id, rejected,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
p_value, xi, omega, alpha, nu)
head(resampling_results)
# save
write.fst(resampling_results, paste0(results_dir, "/resampling_results.fst"))
results_dir_negative_binomial
# Manipulate the negative binomial regression results
negbin_results <- paste0(results_dir_negative_binomial, "/all_results.fst") %>% read.fst() %>% head()
negbin_results
# Manipulate the negative binomial regression results
negbin_results <- paste0(results_dir_negative_binomial, "/all_results.fst") %>% read.fst()
head(negbin_results)
likelihood_results <- negbin_results %>% rename(grna_group = gRNA_id)
negbin_results
head(negbin_results)
negbin_results %>% rename(grna_group = gRNA_id) %>% head
negbin_results %>% rename(grna_group = gRNA_id) %>%
left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group"))
likelihood_results <- negbin_results %>% rename(grna_group = gRNA_id) %>%
left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
method, dispersion_estimate, confounder_adjustment, beta, pvalue, zvalue)
likelihood_results <- negbin_results %>% rename(grna_group = gRNA_id) %>%
left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
dispersion_estimate, confounder_adjustment, beta, pvalue, zvalue)
likelihood_results <- negbin_results %>% rename(grna_group = gRNA_id) %>%
left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
confounder_adjustment, beta, pvalue, zvalue)
likelihood_results <- negbin_results %>% rename(grna_group = gRNA_id) %>%
left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
beta, pvalue, zvalue)
likelihood_results <- negbin_results %>% rename(grna_group = gRNA_id) %>%
left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
pvalue)
likelihood_results <- negbin_results %>% rename(grna_group = gRNA_id) %>%
left_join(original_results %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type),
by = c("gene_id", "grna_group")) %>%
select(chr, pair_id,
gene_id, gene_short_name, target_gene.start, target_gene.stop, TSS, outlier_gene,
grna_group, quality_rank_grna, target_site, target_site.start, target_site.stop, site_type,
pvalue = p_value)
head(likelihood_results)
write.fst(likelihood_results, paste0(results_dir_negative_binomial, "/likelihood_results.fst"))
likelihood_results$site_type %>% table()
table(likelihood_results$site_type, likelihood_results$quality_rank_grna)
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
require(katsevich2020)
source(paste0(code_dir, "analysis_drivers_gasp/file_paths_to_dirs.R"))
