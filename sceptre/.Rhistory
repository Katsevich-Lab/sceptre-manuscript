cat("Creating precomputation dictionaries.\n")
dicts <- create_and_store_dictionaries(gRNA_gene_pairs, gene_precomp_dir, gRNA_precomp_dir, results_dir, pod_sizes)
dicts
pair_dir <- "/Volumes/tims_new_drive/research/sceptre_files/results/xie/sceptre/results_dictionary.fst" %>% read.fst()
pair_dir
tail(pair_dir)
dicts
gene_dir <- "/Volumes/tims_new_drive/research/sceptre_files/data/xie/precomp/gene/gene_dictionary.fst" %>% read.fst()
tail(gene_dir)
tail(pair_dir)
pair_dir$gRNA_id
pair_dir$gene_id
gene_dir$id
gene1 <- gene_dir$id
gene2 <- pair_dir$gene_id
gene1 == gene2
tail(gene1)
tail(gene2)
tail(gene1, 50)
tail(gene2, 50)
length(gene1)
length(gene2)
duplicated(gene1)
duplicated(gene1) %>% any
duplicated(gene2)
duplicated(gene2) %>% any
duplicated(gene2) %>% sum
length(gene1)
length(gene2)
nrow(gRNA_gene_pairs)
gRNA_gene_pairs
tail(gRNA_gene_pairs)
gRNA_gene_pairs$gene_id %>% duplicated() %>% any
gRNA_gene_pairs$gene_id %>% duplicated() %>% sum()
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
source(paste0(code_dir, "/analysis_drivers_xie/paths_to_dirs.R"))
# First, save the model covariate matrix
exp_mat_t <- readRDS(paste0(processed_dir, "/exp_mat_t_metadata.rds")) %>% load_fbm()
# Determine which cells will be included in the analysis; for now, we exclude cells with 0 gRNA UMIs
cell_subset <- which(!is.na(covariate_model_matrix$log_n_gRNA_umis))
# Next, determine which genes to analyze
gRNA_indic_mat <- read.fst(paste0(processed_dir, "/gRNA_indicator_matrix.fst"))
head(gRNA_indic_mat)
gRNA_id <- colnames(gRNA_indic_mat)
gRNA_id
gene_ids <- readRDS(paste0(processed_dir, "/ordered_genes.RDS"))
gene_ids
duplicated(gene_ids)
duplicated(gene_ids) %>% any
duplicated(gene_ids) %>% which()
gene_ids[8480]
gene_ids[17549]
length(gene_ids)
gene_ids[duplicated(gene_ids)]
which(gene_ids == "VAMP7")
# Next, determine which genes to analyze
gRNA_indic_mat <- read.fst(paste0(processed_dir, "/gRNA_indicator_matrix.fst"))
gRNA_id <- colnames(gRNA_indic_mat)
gRNA_id
gene_ids <- readRDS(paste0(processed_dir, "/ordered_genes.RDS"))
head(gene_ids)
exp_mat <- readRDS(paste0(processed_dir, "/exp_mat_metadata.rds")) %>% load_fbm()
nrow(exp_mat)
ncol(exp_map)
ncol(exp_mat)
exp_mat[,18350] %>% head
exp_mat[,18413] %>% head
exp_mat[,18350] %>% head(1000)
exp_mat[,18413] == exp_mat[,18350]
exp_mat[,18413] == exp_mat[,18350] %>% all
(exp_mat[,18413] == exp_mat[,18350]) %>% all
exp_mat[,18413] == exp_mat[,18350]
exp_mat[,18413] %>% head(100)
exp_mat[,18450] %>% head(100)
exp_mat[,18350]%>% head(100)
gene_ids
duplicated(gene_ids)
duplicated(gene_ids) %>% which()
gene_ids[duplicated(gene_ids) %>% which()]
# Next, determine which genes to analyze
gRNA_indic_mat <- read.fst(paste0(processed_dir, "/gRNA_indicator_matrix.fst"))
gRNA_id <- colnames(gRNA_indic_mat)
gene_ids <- readRDS(paste0(processed_dir, "/ordered_genes.RDS"))
exp_mat <- readRDS(paste0(processed_dir, "/exp_mat_metadata.rds")) %>% load_fbm()
gene_expression_p <- big_apply(exp_mat, function(X, ind) colMeans(X[,ind] >= 1)) %>% unlist()
highly_expressed_genes <- gene_ids[which(gene_expression_p >= 0.08)]
highly_expressed_genes
length("ZNF883"  "KLHDC7B" "PLCXD1"  "GTPBP6"  "PPP2R3B" "SHOX"    "CRLF2"   "CSF2RA"  "IL3RA"
[10] "SLC25A6" "ASMTL"   "P2RY8"   "AKAP17A" "ASMT"    "DHRSX"   "ZBED1"   "CD99"    "SPRY3"
[19] "VAMP7"   "IL9R"
)
length(highly_expressed_genes)
highly_expressed_genes <- gene_ids[which(gene_expression_p >= 0.08)] %>% unique()
length(highly_expressed_genes)
600[1]
highly_expressed_genes <- gene_ids[which(gene_expression_p >= 0.08)] %>% unique()
length(highly_expressed_genes)
gRNA_gene_pairs <- tibble(gene_id = highly_expressed_genes, gRNA_id = gRNA_id)
write.fst(gRNA_gene_pairs, paste0(processed_dir, "/gRNA_gene_pairs.fst"))
offsite_dir <- "/Volumes/tims_new_drive/research/sceptre_files"
processed_dir <- paste0(offsite_dir, "/data/xie/processed")
gene_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gene")
gRNA_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gRNA")
results_dir <- paste0(offsite_dir, "/results/xie/sceptre")
results_dir_negbin <- paste0(offsite_dir, "/results/xie/negative_binomial")
log_dir <- paste0(offsite_dir, "/logs/xie")
gRNA_gene_pairs <- read.fst(paste0(processed_dir, "/gRNA_gene_pairs.fst"))
covariate_matrix <- read.fst(paste0(processed_dir, "/covariate_model_matrix.fst"))
cell_gene_expression_matrix <- readRDS(paste0(processed_dir, "/exp_mat_metadata.rds")) %>% load_fbm
ordered_gene_ids <- readRDS(paste0(processed_dir, "/ordered_genes.RDS"))
gRNA_indicator_matrix_fp <- paste0(processed_dir, "/gRNA_indicator_matrix.fst")
cell_subset <- readRDS(paste0(processed_dir, "/cell_subsets.rds"))[["exploratory_cells"]]
seed <- 1234
B <- 500
pod_sizes <- c(gene = 20, gRNA = 1, pair = 20) # c(gene = 200, gRNA = 1, pair = 200)
gene_sizes <- NULL
head(gRNA_gene_pairs)
nrow(gRNA_gene_pairs)
duplicated(gRNA_gene_pairs$gene_id)
args <- commandArgs(trailingOnly = TRUE)
code_dir <- if (is.na(args[1])) "/Users/timbarry/Box/SCEPTRE/sceptre_paper/" else args[1]
source(paste0(code_dir, "/analysis_drivers_xie/paths_to_dirs.R"))
gRNA_indic_mat <- read.fst(paste0(processed_dir, "/gRNA_indicator_matrix.fst"))
gRNA_id <- colnames(gRNA_indic_mat)
gene_ids <- readRDS(paste0(processed_dir, "/ordered_genes.RDS"))
exp_mat <- readRDS(paste0(processed_dir, "/exp_mat_metadata.rds")) %>% load_fbm()
gene_expression_p <- big_apply(exp_mat, function(X, ind) colMeans(X[,ind] >= 1)) %>% unlist()
gene_expression_p
highly_expressed_genes <- gene_ids[which(gene_expression_p >= 0.08)] %>% unique()
highly_expressed_genes
which(gene_expression_p >= 0.08)
gene_ids[which(gene_expression_p >= 0.08)]
duplicated(gene_ids[which(gene_expression_p >= 0.08)])
duplicated(gene_ids[which(gene_expression_p >= 0.08)]) %>% which()
gene_ids[which(gene_expression_p >= 0.08)]
length(gene_expression_p)
ncol(exp_mat)
gene_expression_p
which(gene_expression_p >= 0.08)
gene_ids[which(gene_expression_p >= 0.08)]
highly_expressed_genes <- gene_ids[which(gene_expression_p >= 0.08)]
length(highly_expressed_genes)
duplicated(highly_expressed_genes)
duplicated(highly_expressed_genes) %>% which()
highly_expressed_genes[duplicated(highly_expressed_genes) %>% which()]
gRNA_indic_mat
highly_expressed_genes
gene_dups <- highly_expressed_genes[which(duplicated(highly_expressed_genes))]
gene_dups
colnames(exp_mat_t)
processed_dir <- paste0(offsite_dir, "/data/xie/processed")
offsite_dir <- "/Volumes/tims_new_drive/research/sceptre_files"
processed_dir <- paste0(offsite_dir, "/data/xie/processed")
gene_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gene")
gRNA_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gRNA")
results_dir <- paste0(offsite_dir, "/results/xie/sceptre")
results_dir_negbin <- paste0(offsite_dir, "/results/xie/negative_binomial")
log_dir <- paste0(offsite_dir, "/logs/xie")
gRNA_gene_pairs <- read.fst(paste0(processed_dir, "/gRNA_gene_pairs.fst"))
require(sceptre)
gRNA_gene_pairs <- read.fst(paste0(processed_dir, "/gRNA_gene_pairs.fst"))
head(gRNA_gene_pairs)
covariate_matrix <- read.fst(paste0(processed_dir, "/covariate_model_matrix.fst"))
head(covariate_matrix)
cell_gene_expression_matrix <- readRDS(paste0(processed_dir, "/exp_mat_metadata.rds")) %>% load_fbm
ordered_gene_ids <- readRDS(paste0(processed_dir, "/ordered_gene_ids.RDS"))
head(ordered_gene_ids)
length(ordered_gene_ids)
gRNA_indicator_matrix_fp <- paste0(processed_dir, "/gRNA_indicator_matrix.fst")
cell_subset <- readRDS(paste0(processed_dir, "/cell_subsets.rds"))[["exploratory_cells"]]
seed <- 1234
B <- 500
pod_sizes <- c(gene = 20, gRNA = 1, pair = 20) #c(gene = 200, gRNA = 1, pair = 200)
gene_sizes <- NULL
c(gene = 200, gRNA = 1, pair = 200)
# Load the future package for parallel computation
if (multi_processor) {
library(future.apply)
plan(multisession)
}
# First, create file dictionaries
cat("Creating precomputation dictionaries.\n")
dicts <- create_and_store_dictionaries(gRNA_gene_pairs, gene_precomp_dir, gRNA_precomp_dir, results_dir, pod_sizes)
dicts
gene_dict <- read.fst("/Volumes/tims_new_drive/research/sceptre_files/data/xie/precomp/gene/gene_dictionary.fst")
head(gene_dict)
offsite_dir <- "/Volumes/tims_new_drive/research/sceptre_files"
processed_dir <- paste0(offsite_dir, "/data/xie/processed")
gene_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gene")
gRNA_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gRNA")
results_dir <- paste0(offsite_dir, "/results/xie/sceptre")
results_dir_negbin <- paste0(offsite_dir, "/results/xie/negative_binomial")
log_dir <- paste0(offsite_dir, "/logs/xie")
gRNA_gene_pairs <- read.fst(paste0(processed_dir, "/gRNA_gene_pairs.fst"))
covariate_matrix <- read.fst(paste0(processed_dir, "/covariate_model_matrix.fst"))
cell_gene_expression_matrix <- readRDS(paste0(processed_dir, "/exp_mat_metadata.rds")) %>% load_fbm
ordered_gene_ids <- readRDS(paste0(processed_dir, "/ordered_gene_ids.RDS"))
gRNA_indicator_matrix_fp <- paste0(processed_dir, "/gRNA_indicator_matrix.fst")
cell_subset <- readRDS(paste0(processed_dir, "/cell_subsets.rds"))[["exploratory_cells"]]
seed <- 1234
B <- 500
pod_sizes <- c(gene = 20, gRNA = 1, pair = 20) # c(gene = 200, gRNA = 1, pair = 200)
gene_sizes <- NULL
require(sceptre)
offsite_dir <- "/Volumes/tims_new_drive/research/sceptre_files"
processed_dir <- paste0(offsite_dir, "/data/xie/processed")
gene_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gene")
gRNA_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gRNA")
results_dir <- paste0(offsite_dir, "/results/xie/sceptre")
results_dir_negbin <- paste0(offsite_dir, "/results/xie/negative_binomial")
log_dir <- paste0(offsite_dir, "/logs/xie")
gRNA_gene_pairs <- read.fst(paste0(processed_dir, "/gRNA_gene_pairs.fst"))
covariate_matrix <- read.fst(paste0(processed_dir, "/covariate_model_matrix.fst"))
cell_gene_expression_matrix <- readRDS(paste0(processed_dir, "/exp_mat_metadata.rds")) %>% load_fbm
ordered_gene_ids <- readRDS(paste0(processed_dir, "/ordered_gene_ids.RDS"))
gRNA_indicator_matrix_fp <- paste0(processed_dir, "/gRNA_indicator_matrix.fst")
cell_subset <- readRDS(paste0(processed_dir, "/cell_subsets.rds"))[["exploratory_cells"]]
seed <- 1234
B <- 500
pod_sizes <- c(gene = 20, gRNA = 1, pair = 20) # c(gene = 200, gRNA = 1, pair = 200)
gene_sizes <- NULL
# First, create file dictionaries
cat("Creating precomputation dictionaries.\n")
dicts <- create_and_store_dictionaries(gRNA_gene_pairs, gene_precomp_dir, gRNA_precomp_dir, results_dir, pod_sizes)
dicts
# A quick helper function to run a large computation
run_big_computation <- function(n_pods, big_FUN, multi_processor) {
l <- list(X = 1:n_pods, FUN = big_FUN)
if (multi_processor) l[["future.seed"]] <- FALSE
apply_fun <- if (multi_processor) future_lapply else lapply
x <- suppressWarnings(do.call(what = apply_fun, args = l))
}
dicts
"/Volumes/tims_new_drive/research/sceptre_files/data/xie/precomp/gene/gene_dictionary.fst"
run_gene_precomputation
gene_dictionary <- read.fst(paste0(gene_precomp_dir, "/gene_dictionary.fst")) %>% filter(pod_id == !!pod_id)
pod_id <- 1
gene_dictionary <- read.fst(paste0(gene_precomp_dir, "/gene_dictionary.fst")) %>% filter(pod_id == !!pod_id)
gene_dictionary
gene_ids <- gene_dictionary %>% pull(id) %>% as.character()
gene_ids
gene_ids
gene_id <- gene_ids[1]
gene_id
cat(paste0("Running precomputation for gene ", gene_id, ".\n"))
integer_id <- which(gene_id == ordered_gene_ids)
expressions <- cell_gene_expression_matrix[,integer_id]
expressions
hist(expressions)
if (!is.null(cell_subset)) expressions <- expressions[cell_subset]
cell_subset
run_gene_precomputation(expressions = expressions, covariate_matrix = covariate_matrix, gene_precomp_size = curr_gene_size)[["gene_precomp_size"]]
run_gene_precomputation(expressions = expressions, covariate_matrix = covariate_matrix, gene_precomp_size = NULL)[["gene_precomp_size"]]
length(expressions)
nrow(covariate_matrix)
if (!is.null(cell_subset)) covariate_matrix <- covariate_matrix[cell_subset,]
length(expressions)
nrow(covariate_matrix)
run_gene_precomputation(expressions = expressions, covariate_matrix = covariate_matrix, gene_precomp_size = NULL)[["gene_precomp_size"]]
run_gene_precomputation(expressions = expressions, covariate_matrix = covariate_matrix, gene_precomp_size = NULL)[["gene_precomp_size"]]
precomps <- map(gene_ids, function(gene_id) {
cat(paste0("Running precomputation for gene ", gene_id, ".\n"))
integer_id <- which(gene_id == ordered_gene_ids)
expressions <- cell_gene_expression_matrix[,integer_id]
if (!is.null(cell_subset)) expressions <- expressions[cell_subset]
run_gene_precomputation(expressions = expressions, covariate_matrix = covariate_matrix, gene_precomp_size = NULL)[["gene_precomp_size"]]
})
precomps
unlist(precomps)
unregularized_sizes <- unlist(precomps)
gene_ids
names(unregularized_sizes) <- gene_ids
unregularized_sizes
unregularized_sizes
unregularized_sizes <- unlist(precomps)
names(unregularized_sizes) <- gene_ids
unregularized_sizes
unregularized_sizes
gene_id
unreg_size <- run_gene_precomputation(expressions = expressions, covariate_matrix = covariate_matrix, gene_precomp_size = NULL)[["gene_precomp_size"]]
log_geom_mean(expressions)
log_geom_mean(expressions)
gene_log_geom_mean <- log_geom_mean(expressions)
unrunreg_size
unreg_size
gene_log_geom_mean
precomps <- map(gene_ids, function(gene_id) {
cat(paste0("Running precomputation round 1 for gene ", gene_id, ".\n"))
integer_id <- which(gene_id == ordered_gene_ids)
expressions <- cell_gene_expression_matrix[,integer_id]
if (!is.null(cell_subset)) expressions <- expressions[cell_subset]
unreg_size <- run_gene_precomputation(expressions = expressions, covariate_matrix = covariate_matrix, gene_precomp_size = NULL)[["gene_precomp_size"]]
gene_log_geom_mean <- log_geom_mean(expressions)
return(list(unreg_size = unreg_size, gene_log_geom_mean = gene_log_geom_mean))
})
names(precomps) <- gene_ids
rpecomps
precomps
precomps$ENSG00000188976.10
names(precomps) <- gene_ids
out_unreg_sizes <- map_dbl(precomps, function(l) l$unreg_size)
out_log_geom_means <- map_dbl(precomps, function(l) l$gene_log_geom_mean)
out_unreg_sizes
out_log_geom_means
colnames(gene_dictionary)
(gene_dictionary %>% pull(size_unreg_file))[1] %>% as.character()
unreg_sizes_save_fp <- (gene_dictionary %>% pull(size_unreg_file))[1] %>% as.character()
(gene_dictionary %>% pull(geom_mean_file))[1] %>% as.character()
unreg_sizes_save_fp <- (gene_dictionary %>% pull(size_unreg_file))[1] %>% as.character()
geom_means_save_fp <- (gene_dictionary %>% pull(geom_mean_file))[1] %>% as.character()
unreg_sizes_save_fp
geom_means_save_fp
saveRDS(object = out_unreg_sizes, file = unreg_sizes_save_fp)
geom_means_save_fp
unreg_sizes_save_fp
geom_means_save_fp
out_log_geom_means
saveRDS(object = out_log_geom_means, file = geom_means_save_fp)
processed_dir <- paste0(offsite_dir, "/data/xie/processed")
gene_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gene")
gRNA_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gRNA")
results_dir <- paste0(offsite_dir, "/results/xie/sceptre")
results_dir_negbin <- paste0(offsite_dir, "/results/xie/negative_binomial")
log_dir <- paste0(offsite_dir, "/logs/xie")
gRNA_gene_pairs <- read.fst(paste0(processed_dir, "/gRNA_gene_pairs.fst"))
covariate_matrix <- read.fst(paste0(processed_dir, "/covariate_model_matrix.fst"))
cell_gene_expression_matrix <- readRDS(paste0(processed_dir, "/exp_mat_metadata.rds")) %>% load_fbm
ordered_gene_ids <- readRDS(paste0(processed_dir, "/ordered_gene_ids.RDS"))
gRNA_indicator_matrix_fp <- paste0(processed_dir, "/gRNA_indicator_matrix.fst")
cell_subset <- readRDS(paste0(processed_dir, "/cell_subsets.rds"))[["exploratory_cells"]]
seed <- 1234
B <- 500
pod_sizes <- c(gene = 20, gRNA = 1, pair = 20) # c(gene = 200, gRNA = 1, pair = 200)
gene_sizes <- NULL
offsite_dir <- "/Volumes/tims_new_drive/research/sceptre_files"
processed_dir <- paste0(offsite_dir, "/data/xie/processed")
gene_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gene")
gRNA_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gRNA")
results_dir <- paste0(offsite_dir, "/results/xie/sceptre")
results_dir_negbin <- paste0(offsite_dir, "/results/xie/negative_binomial")
log_dir <- paste0(offsite_dir, "/logs/xie")
gRNA_gene_pairs <- read.fst(paste0(processed_dir, "/gRNA_gene_pairs.fst"))
covariate_matrix <- read.fst(paste0(processed_dir, "/covariate_model_matrix.fst"))
cell_gene_expression_matrix <- readRDS(paste0(processed_dir, "/exp_mat_metadata.rds")) %>% load_fbm
ordered_gene_ids <- readRDS(paste0(processed_dir, "/ordered_gene_ids.RDS"))
gRNA_indicator_matrix_fp <- paste0(processed_dir, "/gRNA_indicator_matrix.fst")
cell_subset <- readRDS(paste0(processed_dir, "/cell_subsets.rds"))[["exploratory_cells"]]
seed <- 1234
B <- 500
pod_sizes <- c(gene = 20, gRNA = 1, pair = 20) # c(gene = 200, gRNA = 1, pair = 200)
gene_sizes <- NULL
processed_dir <- paste0(offsite_dir, "/data/xie/processed")
gene_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gene")
gRNA_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gRNA")
results_dir <- paste0(offsite_dir, "/results/xie/sceptre")
results_dir_negbin <- paste0(offsite_dir, "/results/xie/negative_binomial")
log_dir <- paste0(offsite_dir, "/logs/xie")
gRNA_gene_pairs <- read.fst(paste0(processed_dir, "/gRNA_gene_pairs.fst"))
covariate_matrix <- read.fst(paste0(processed_dir, "/covariate_model_matrix.fst"))
cell_gene_expression_matrix <- readRDS(paste0(processed_dir, "/exp_mat_metadata.rds")) %>% load_fbm
ordered_gene_ids <- readRDS(paste0(processed_dir, "/ordered_gene_ids.RDS"))
gRNA_indicator_matrix_fp <- paste0(processed_dir, "/gRNA_indicator_matrix.fst")
cell_subset <- readRDS(paste0(processed_dir, "/cell_subsets.rds"))[["exploratory_cells"]]
seed <- 1234
B <- 500
pod_sizes <- c(gene = 20, gRNA = 1, pair = 20) # c(gene = 200, gRNA = 1, pair = 200)
gene_sizes <- NULL
offsite_dir <- "/Volumes/tims_new_drive/research/sceptre_files"
processed_dir <- paste0(offsite_dir, "/data/xie/processed")
gene_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gene")
gRNA_precomp_dir <- paste0(offsite_dir, "/data/xie/precomp/gRNA")
results_dir <- paste0(offsite_dir, "/results/xie/sceptre")
results_dir_negbin <- paste0(offsite_dir, "/results/xie/negative_binomial")
log_dir <- paste0(offsite_dir, "/logs/xie")
gRNA_gene_pairs <- read.fst(paste0(processed_dir, "/gRNA_gene_pairs.fst"))
covariate_matrix <- read.fst(paste0(processed_dir, "/covariate_model_matrix.fst"))
cell_gene_expression_matrix <- readRDS(paste0(processed_dir, "/exp_mat_metadata.rds")) %>% load_fbm
ordered_gene_ids <- readRDS(paste0(processed_dir, "/ordered_gene_ids.RDS"))
gRNA_indicator_matrix_fp <- paste0(processed_dir, "/gRNA_indicator_matrix.fst")
cell_subset <- readRDS(paste0(processed_dir, "/cell_subsets.rds"))[["exploratory_cells"]]
seed <- 1234
B <- 500
pod_sizes <- c(gene = 20, gRNA = 1, pair = 20) # c(gene = 200, gRNA = 1, pair = 200)
gene_sizes <- NULL
run_gene_precomputation_at_scale_round_1 <- function(pod_id, gene_precomp_dir, cell_gene_expression_matrix, ordered_gene_ids, covariate_matrix, cell_subset = NULL, log_dir = NULL) {
if (!is.null(log_dir)) activate_sink(paste0(log_dir, "/gene_precomp_round_1", pod_id, ".Rout"))
if (!is.null(cell_subset)) covariate_matrix <- covariate_matrix[cell_subset,]
gene_dictionary <- read.fst(paste0(gene_precomp_dir, "/gene_dictionary.fst")) %>% filter(pod_id == !!pod_id)
gene_ids <- gene_dictionary %>% pull(id) %>% as.character()
precomps <- map(gene_ids, function(gene_id) {
cat(paste0("Running precomputation round 1 for gene ", gene_id, ".\n"))
integer_id <- which(gene_id == ordered_gene_ids)
expressions <- cell_gene_expression_matrix[,integer_id]
if (!is.null(cell_subset)) expressions <- expressions[cell_subset]
unreg_size <- run_gene_precomputation(expressions = expressions, covariate_matrix = covariate_matrix, gene_precomp_size = NULL)[["gene_precomp_size"]]
gene_log_geom_mean <- log_geom_mean(expressions)
return(list(unreg_size = unreg_size, gene_log_geom_mean = gene_log_geom_mean))
})
names(precomps) <- gene_ids
out_unreg_sizes <- map_dbl(precomps, function(l) l$unreg_size)
out_log_geom_means <- map_dbl(precomps, function(l) l$gene_log_geom_mean)
unreg_sizes_save_fp <- (gene_dictionary %>% pull(size_unreg_file))[1] %>% as.character()
saveRDS(object = out_unreg_sizes, file = unreg_sizes_save_fp)
geom_means_save_fp <- (gene_dictionary %>% pull(geom_mean_file))[1] %>% as.character()
saveRDS(object = out_log_geom_means, file = geom_means_save_fp)
if (!is.null(log_dir)) deactivate_sink()
}
run_gene_precomputation_at_scale_round_1(pod_id = 2, gene_precomp_dir = gene_precomp_dir, cell_gene_expression_matrix = cell_gene_expression_matrix, ordered_gene_ids = ordered_gene_ids, covariate_matrix = covariate_matrix, cell_subset = cell_subset, log_dir = log_dir)
gene_precomp_dir
file.exists(gene_precomp_dir)
grep(pattern = 'gene_size_unreg_[0-9]+.fst', x = file_names, value = TRUE)
file_names <- list.files(gene_precomp_dir)
file_names
file_names <- list.files(gene_precomp_dir)
grep(pattern = 'gene_size_unreg_[0-9]+.fst', x = file_names, value = TRUE)
grep(pattern = 'gene_size_unreg_[0-9]+.rds', x = file_names, value = TRUE)
gene_size_unreg_files <- grep(pattern = 'gene_size_unreg_[0-9]+.rds', x = file_names, value = TRUE)
gene_size_unreg_files
gene_size_unreg_files <- paste0(gene_precomp_dir, grep(pattern = 'gene_size_unreg_[0-9]+.rds', x = file_names, value = TRUE))
gene_size_unreg_files
file_names <- list.files(gene_precomp_dir)
gene_size_unreg_files <- paste0(gene_precomp_dir, "/", grep(pattern = 'gene_size_unreg_[0-9]+.rds', x = file_names, value = TRUE))
gene_size_unreg_files
file_names <- list.files(gene_precomp_dir)
gene_size_unreg_files <- paste0(gene_precomp_dir, "/", grep(pattern = 'gene_size_unreg_[0-9]+.rds', x = file_names, value = TRUE))
gene_size_unreg_files
gene_geom_mean_files <- paste0(gene_precomp_dir, "/", grep(pattern = 'gene_geom_mean_[0-9]+.rds', x = file_names, value = TRUE))
gene_geom_mean_files
gene_sizes_unreg <- gene_size_unreg_files %>% map(readRDS) %>% reduce(c)
head(gene_sizes_unreg)
gene_sizes_unreg
load_distributed_vector <- function(f_names) f_names %>% map(readRDS) %>% reduce(c)
load_distributed_vector <- function(f_names) f_names %>% map(readRDS) %>% reduce(c)
gene_sizes_unreg <- load_distributed_vector(gene_size_unreg_files)
gene_geom_means <- load_distributed_vector(gene_geom_mean_files)
head(gene_sizes_unreg)
head(gene_geom_means)
regularize_thetas(genes_log_gmean = gene_geom_means, theta = gene_sizes_unreg)
regularize_thetas(genes_log_gmean = gene_geom_means, theta = gene_sizes_unreg, plot_me = TRUE)
names(gene_sizes_unreg)
match(x = names(gene_geom_means), table = names(gene_sizes_unreg))
?match
names(gene_sizes_unreg)
order(names(gene_sizes_unreg))
names(gene_sizes_unreg) == names(gene_geom_means)
names(gene_sizes_unreg)
names(gene_geom_means)
!all(names(gene_sizes_unreg) == names(gene_geom_means))
gene_sizes_unreg <- gene_sizes_unreg[order(names(gene_sizes_unreg))]
gene_geom_means <- gene_geom_means[order(names(gene_geom_means))]
head(gene_sizes_unreg)
head(gene_geom_means)
regularize_thetas(genes_log_gmean = gene_geom_means, theta = gene_sizes_unreg, plot_me = TRUE)
regularize_thetas(genes_log_gmean = gene_geom_means, theta = gene_sizes_unreg, plot_me = FALSE)
sizes_reg <- regularize_thetas(genes_log_gmean = gene_geom_means, theta = gene_sizes_unreg, plot_me = FALSE)
sizes_reg
head(sizes_reg)
names(gene_size_unreg)
gene_sizes_unreg
names(gene_sizes_unreg)
sizes_reg <- regularize_thetas(genes_log_gmean = gene_geom_means, theta = gene_sizes_unreg, plot_me = FALSE)
sizes_reg
names(sizes_reg) <- names(gene_sizes_unreg)
head(sizes_reg)
processed_dir
saveRDS(object = sizes_reg, file = paste0(processed_dir, "/gene_sizes_regularized.rds"))
sizes_reg
paste0(processed_dir, "/gene_sizes_regularized.rds")
sizes_reg
saveRDS(object = sizes_reg, file = paste0(processed_dir, "/gene_sizes_regularized.rds"))
processed_dir
gene_precomp_dir
saveRDS(object = sizes_reg, file = paste0(gene_precomp_dir, "/gene_sizes_regularized.rds"))
cat("Regularizing gene sizes./n")
cat("Regularizing gene sizes.\n")
cat("Regularizing gene sizes.\n")
regularize_gene_sizes_at_scale <- function(gene_precomp_dir, log_dir = NULL) {
if (!is.null(log_dir)) activate_sink(paste0(log_dir, "/gene_precomp_regularize_sizes", ".Rout"))
file_names <- list.files(gene_precomp_dir)
gene_size_unreg_files <- paste0(gene_precomp_dir, "/", grep(pattern = 'gene_size_unreg_[0-9]+.rds', x = file_names, value = TRUE))
gene_geom_mean_files <- paste0(gene_precomp_dir, "/", grep(pattern = 'gene_geom_mean_[0-9]+.rds', x = file_names, value = TRUE))
load_distributed_vector <- function(f_names) f_names %>% map(readRDS) %>% reduce(c)
gene_sizes_unreg <- load_distributed_vector(gene_size_unreg_files)
gene_geom_means <- load_distributed_vector(gene_geom_mean_files)
if (!all(names(gene_sizes_unreg) == names(gene_geom_means))) {
gene_sizes_unreg <- gene_sizes_unreg[order(names(gene_sizes_unreg))]
gene_geom_means <- gene_geom_means[order(names(gene_geom_means))]
}
cat("Regularizing gene sizes.\n")
sizes_reg <- regularize_thetas(genes_log_gmean = gene_geom_means, theta = gene_sizes_unreg, plot_me = FALSE)
names(sizes_reg) <- names(gene_sizes_unreg)
saveRDS(object = sizes_reg, file = paste0(gene_precomp_dir, "/gene_sizes_regularized.rds"))
if (!is.null(log_dir)) deactivate_sink()
}
regularize_gene_sizes_at_scale(gene_precomp_dir)
pod_id
gene_precomp_dir
cell_gene_expression_matrix
ordered_gene_ids
covariate_matrix
cell_subset
log_dir
read.fst(paste0(gene_precomp_dir, "/gene_dictionary.fst"))
read.fst(paste0(gene_precomp_dir, "/gene_dictionary.fst"), "size_reg_file")
gene_dictionary <- (read.fst(paste0(gene_precomp_dir, "/gene_dictionary.fst"), "size_reg_file") %>% pull())[1]
gene_dictionary
gene_dictionary <- (read.fst(paste0(gene_precomp_dir, "/gene_dictionary.fst"), "size_reg_file") %>% pull())[1] %>% as.character()
gene_dictionary
sizes_reg_save_fp <- (read.fst(paste0(gene_precomp_dir, "/gene_dictionary.fst"), "size_reg_file") %>% pull())[1] %>% as.character()
saveRDS(object = sizes_reg, file = sizes_reg_save_fp)
pod_id
